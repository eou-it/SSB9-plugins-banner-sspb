/*******************************************************************************
 Copyright 2017-2020 Ellucian Company L.P. and its affiliates.
 *******************************************************************************/

/******************************************************************************
 This file contains configuration needed by the Banner XE Page Builder
 web application. Please refer to the administration guide for
 additional information regarding the configuration items contained within this file.

 This configuration file contains the following sections:
 * PageBuilder
     *   Enable/Disable switch and DataSource connection details for Page Builder artifacts
     *   Miscellaneous configuration

 * Theme
     *   url:  theme server url, if this is not specified then it points to same app
     *   theme: used by client application, mep code is used as theme name by default
     *   template: used by client application
     *   cacheTimeOut: themes would be cached for specified duration (in seconds) in theme server
                       (This is not required if the app points to remote theme server)

 * Self Service Support
 * CAS SSO Configuration (supporting self service users)
 * Logging Configuration (Note: Changes here require restart -- use JMX to avoid the need restart)

 NOTE: Banner DataSource and JNDI configuration resides in the cross-module
 'banner_configuration.groovy' file.

 *******************************************************************************/

pageBuilder.enabled = true

if (!pageBuilder.enabled) {
  grails.plugin.springsecurity.securityConfigType = grails.plugin.springsecurity.SecurityConfigType.InterceptUrlMap
}

/*******************************************************************************
 *                                                                              *
 *              Page Builder Artifact File Location Configuration               *
 *                                                                              *
 *******************************************************************************/
pbRoot = "c:/temp/pb"
pageBuilder {
	locations {
	  bundle        = "${pbRoot}/i18n"
	  page          = "${pbRoot}/page"
	  css           = "${pbRoot}/css"
	  virtualDomain = "${pbRoot}/virtdom"
	}
    // Uncomment debugRoles to reveal detailed SQL error messages for
    // Virtual domains to users with any of the comma separated roles
    // debugRoles = "ROLE_GPBADMN_BAN_DEFAULT_PAGEBUILDER_M"
}

/*******************************************************************************
 *                                                                              *
 *              Theme Configuration                                             *
 *                                                                              *
 *******************************************************************************/
environments {
     production {
         banner.theme.url="http://BANNER9_HOST:PORT/BannerExtensibility/theme"   // required only if theme server is remote
         banner.theme.name="ellucian"                                       // Not required for MEP
         banner.theme.template="BannerExtensibility"
         banner.theme.cacheTimeOut = 900                                    // seconds, required only if the app is theme server
     }
     development {
         banner.theme.url="http://BANNER9_HOST:PORT/BannerExtensibility/theme"  // required only if theme server is remote
         banner.theme.name="ellucian"                                      // Not required for MEP
         banner.theme.template="BannerExtensibility"
         banner.theme.cacheTimeOut = 120                                   // seconds, required only if the app is theme server
     }
}


// ******************************************************************************
//
//                       +++ Self Service Support +++
//
// ******************************************************************************


ssbEnabled = true
ssbOracleUsersProxied = true



/** *****************************************************************************
 *                                                                              *
 *                AUTHENTICATION PROVIDER CONFIGURATION                         *
 *                                                                              *
 ***************************************************************************** **/
//
// Set authenticationProvider to either default, cas or saml.
// If using cas or saml, Either the CAS CONFIGURATION or the SAML CONFIGURATION
// will also need configured/uncommented as well as set to active.
//
banner {
    sso {
        authenticationProvider           = 'default' //  Valid values are: 'saml' and 'cas' for SSO to work. 'default' to be used only for zip file creation.
        authenticationAssertionAttribute = 'UDC_IDENTIFIER'
        if(authenticationProvider != 'default') {
            grails.plugin.springsecurity.failureHandler.defaultFailureUrl = '/login/error'
        }
        if(authenticationProvider == 'saml') {
            grails.plugin.springsecurity.auth.loginFormUrl = '/saml/login'
        }
    }
}

/** *****************************************************************************
 *                                                                              *
 *                             CAS CONFIGURATION                                *
 *                                                                              *
 ***************************************************************************** **/
// set active = true when authentication provider section configured for cas
grails {
    plugin {
        springsecurity {
            cas {
                active = false
                serverUrlPrefix  = 'http://CAS_HOST:PORT/cas'
                serviceUrl       = 'http://BANNER9_HOST:PORT/APP_NAME/j_spring_cas_security_check'
                serverName       = 'http://BANNER9_HOST:PORT'
                proxyCallbackUrl = 'http://BANNER9_HOST:PORT/APP_NAME/secure/receptor'
                loginUri         = '/login'
                sendRenew        = false
                proxyReceptorUrl = '/secure/receptor'
                useSingleSignout = true
                key = 'grails-spring-security-cas'
                artifactParameter = 'SAMLart'
                serviceParameter = 'TARGET'
                serverUrlEncoding = 'UTF-8'
                filterProcessesUrl = '/j_spring_cas_security_check'
                if (useSingleSignout){
                    grails.plugin.springsecurity.useSessionFixationPrevention = false
                }
            }
            logout {
                afterLogoutUrl = 'http://CAS_HOST:PORT/cas/logout?url=http://BANNER9_HOST:PORT/APP_NAME/'
                // afterLogoutUrl = '/' // This can be used to navigate to the landing page when not using CAS
            }
        }
    }
}

grails.plugin.springsecurity.homePageUrl= 'http://BANNER9_HOST:PORT/APP_NAME/'

//guestAuthenticationEnabled = true

// This entry is required to ensure that 'Sign In' link takes you to corresponding login i.e. for CAS,
// any other authentication system or Default (Banner).
// Example navigates to home page after sign in
loginEndpoint='http://BANNER9_HOST:PORT/APP_NAME/customPage/page/pbadm.ssoauth?url=/'


/*******************************************************************************
 *                                                                              *
 *              SAML CONFIGURATION                                                    *
 *                                                                              *
 *******************************************************************************/
grails.plugin.springsecurity.saml.active = false
grails.plugin.springsecurity.saml.afterLogoutUrl ='/logout/customLogout'
banner.sso.authentication.saml.localLogout='false'
grails.plugin.springsecurity.saml.keyManager.defaultKey = 'extensibility'
grails.plugin.springsecurity.saml.keyManager.storeFile = 'classpath:security/bekeystore.jks'
grails.plugin.springsecurity.saml.keyManager.storePass = 'password'
grails.plugin.springsecurity.saml.keyManager.passwords = [ 'extensibility': 'password' ]
grails.plugin.springsecurity.saml.metadata.sp.file = 'security/banner-BannerExtensibility-saml_sp.xml'
grails.plugin.springsecurity.saml.metadata.providers = [adfs: 'security/banner-BannerExtensibility-saml_idp.xml']
grails.plugin.springsecurity.saml.metadata.defaultIdp = 'adfs'
grails.plugin.springsecurity.saml.metadata.sp.defaults = [
    local: true,
    alias: 'extensibility',
    securityProfile: 'metaiop',
    signingKey: 'extensibility',
    encryptionKey: 'extensibility',
    tlsKey: 'extensibility',
    requireArtifactResolveSigned: false,
    requireLogoutRequestSigned: false,
    requireLogoutResponseSigned: false
]

/*******************************************************************************
 *                                                                              *
 *              X-Frame-Options                                                 *
 *                                                                              *
 *******************************************************************************/
grails.plugin.xframeoptions.urlPattern = '/login/auth'
grails.plugin.xframeoptions.deny = true


/*******************************************************************************
 *                                                                              *
 *                 Eliminate access to the WEB-INF folder                       *
 *                                                                              *
 *******************************************************************************/
grails.resources.adhoc.includes = ['/images/**', '/css/**', '/js/**', '/plugins/**', '/fonts/**']
grails.resources.adhoc.excludes = ['/WEB-INF/**']


