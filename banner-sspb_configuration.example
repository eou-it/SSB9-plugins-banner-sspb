/*******************************************************************************
 Copyright 2011-2013 Ellucian Company L.P. and its affiliates.
 *******************************************************************************/

/******************************************************************************

 This file contains configuration needed by the Banner XE Page Builder
 web application. Please refer to the administration guide for
 additional information regarding the configuration items contained within this file.

 This configuration file contains the following sections:

 * DataSource for Page Builder artifacts

 *

 * Self Service Support

 * Logging Configuration (Note: Changes here require restart -- use JMX to avoid the need restart)

 * CAS SSO Configuration (supporting administrative and self service users)

 * Bookstore Link configuration for Higher Education Opportunity Act (HEOA)

 NOTE: DataSource and JNDI configuration resides in the cross-module
 'banner_configuration.groovy' file.

 *******************************************************************************/

/*******************************************************************************
 *                                                                              *
 *              Page Builder Artifact DataSource Configuration                  *
 *                                                                              *
 *******************************************************************************/

dataSource_sspb {
    pooled = true
    driverClassName = "oracle.jdbc.OracleDriver"
    dialect = "org.hibernate.dialect.Oracle10gDialect"
    username = "sspbmgr"
    password = "u_pick_it"
    url = bannerDS.url
    dbCreate = "none" //"validate"  "update"
    //loggingSql = true
    //logSql = true //true
}

/*******************************************************************************
 *                                                                              *
 *              Page Builder Artifact File Location Configuration               *
 *                                                                              *
 *******************************************************************************/
pageBuilder {
	locations {
	  bundle        = "c:/temp/pb/i18n"
	  page          = "c:/temp/pb/page"
	  css           = "c:/temp/pb/css"
	  virtualDomain = "c:/temp/pb/virtdom"
	}
}



// Is this needed anywhere?
banner {
    picturesPath = System.getProperty('base.dir') + '/test/images'
}



// ******************************************************************************
//
//                       +++ JMX Bean Names +++
//
// ******************************************************************************

// The names used to register Mbeans must be unique for all applications deployed
// into the JVM.  This configuration should be updated for each instance of each
// application to ensure uniqueness.
jmx {
    exported {
        log4j = "BannerExtensibility-log4j"
    }
}

// ******************************************************************************
//
//                       +++ Self Service Support +++
//
// ******************************************************************************


ssbEnabled = true
ssbOracleUsersProxied = true

// ******************************************************************************
//
//                       +++ CAS CONFIGURATION +++
//
// ******************************************************************************

banner {
    sso {
		authenticationProvider = 'default'
        authenticationAssertionAttribute = 'UDC_IDENTIFIER'
	}
}

grails {
    plugin {
        springsecurity {
		/*
            cas {
                serverUrlPrefix  = 'http://CAS_HOST:PORT/cas'
                serviceUrl       = 'http://BANNER9_HOST:PORT/APP_NAME/j_spring_cas_security_check'
                serverName       = 'http://BANNER9_HOST:PORT'
                proxyCallbackUrl = 'http://BANNER9_HOST:PORT/APP_NAME/secure/receptor'
                loginUri         = '/login'
                sendRenew        = false
                proxyReceptorUrl = '/secure/receptor'
                useSingleSignout = true
                key = 'grails-spring-security-cas'
                artifactParameter = 'ticket'
                serviceParameter = 'service'
                filterProcessesUrl = '/j_spring_cas_security_check'
            }
			*/
            logout {
                //afterLogoutUrl = 'https://cas-server/logout?url=http://myportal/main_page.html'
            }
        }
    }
}

// ******************************************************************************
//
//                       +++ LOGGER CONFIGURATION +++
//
// ******************************************************************************
String loggingFileDir =  "target/logs"
String logAppName = "BannerExtensibility"
String loggingFileName = "${loggingFileDir}/${logAppName}.log".toString()


// Note that logging is configured separately for each environment ('development', 'test', and 'production').
// By default, all 'root' logging is 'off'.  Logging levels for root, or specific packages/artifacts, should be configured via JMX.
// Note that you may enable logging here, but it:
//   1) requires a restart, and
//   2) will report an error indicating 'Cannot add new method [getLog]'. (although the logging will in fact work)
//
// JMX should be used to modify logging levels (and enable logging for specific packages). Any JMX client, such as JConsole, may be used.
//
// The logging levels that may be configured are, in order: ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
//
log4j = {
    appenders {
        rollingFile name:'appLog',
		file:loggingFileName,
		maxFileSize:"${10*1024*1024}",
		maxBackupIndex:10,
		layout:pattern( conversionPattern: '%d{[EEE, dd-MMM-yyyy @ HH:mm:ss.SSS]} [%t] %-5p %c %x - %m%n' )
    }

    root {
        warn 'stdout','appLog'
        additivity = true
    }



    // Log4j configuration notes:
    // The following are some common packages that you may want to enable for logging in the section above.
    // You may enable any of these within this file (which will require a restart),
    // or you may add these to a running instance via JMX.
    //
    // Note that settings for specific packages/artifacts will override those for the root logger.
    // Setting any of these to 'off' will prevent logging from that package/artifact regardless of the root logging level.

    // ******** non-Grails classes (e.g., in src/ or grails-app/utils/) *********
    warn 'net.hedtech.banner.service'
    warn 'net.hedtech.banner.student'
    warn 'net.hedtech.banner.student.catalog'
    warn 'net.hedtech.banner.student.common'
    warn 'net.hedtech.banner.student.registration'
    warn 'net.hedtech.banner.student.schedule'
    warn 'net.hedtech.banner.student.faculty'
    warn 'net.hedtech.banner.student.generalstudent'
    warn 'net.hedtech.banner.student.system'
    warn 'net.hedtech.banner.representations'
    warn 'BannerUiSsGrailsPlugin'

    // ******** Grails framework classes *********
    error 'org.codehaus.groovy.grails.web.servlet'        // controllers
    error 'org.codehaus.groovy.grails.web.pages'          // GSP
    error 'org.codehaus.groovy.grails.web.sitemesh'       // layouts
    error 'org.codehaus.groovy.grails.web.mapping.filter' // URL mapping
    error 'org.codehaus.groovy.grails.web.mapping'        // URL mapping
    error 'org.codehaus.groovy.grails.commons'            // core / classloading
    error 'org.codehaus.groovy.grails.plugins'            // plugins
    error 'org.codehaus.groovy.grails.orm.hibernate'      // hibernate integration
    error 'org.springframework'                           // Spring IoC
    error 'org.hibernate'                                 // hibernate ORM
    error 'grails.converters'                             // JSON and XML marshalling/parsing
    off   'grails.app.service.org.grails.plugin.resource' // Resource Plugin
    off   'org.grails.plugin.resource'                    // Resource Plugin
	error 'org.hibernate.type'
    error 'org.hibernate.SQL'

    // ******* Security framework classes **********
    error 'net.hedtech.banner.security'
    error  'net.hedtech.banner.db'
    error 'net.hedtech.banner.security.BannerAccessDecisionVoter'
    error 'net.hedtech.banner.security.BannerAuthenticationProvider'
    error 'net.hedtech.banner.security.CasAuthenticationProvider'
    error 'net.hedtech.banner.security.SelfServiceBannerAuthenticationProvider'
    error 'grails.plugin.springsecurity'
    error 'org.springframework.security'
    error 'org.apache.http.headers'
    error 'org.apache.http.wire'

	//my debugging
	error 'net.hedtech.banner.menu'
	error 'net.hedtech.banner.tools'
	info  'net.hedtech.sspb'
	info  'net.hedtech.virtualDomain'
	info  'net.hedtech.tools'

    // Grails provides a convenience for enabling logging within artefacts, using 'grails.app.XXX'.
    // Unfortunately, this configuration is not effective when 'mixing in' methods that perform logging.
    // Therefore, for controllers and services it is recommended that you enable logging using the controller
    // or service class name (see above 'class name' based configurations).  For example:
    //     all  'net.hedtech.banner.testing.FooController' // turns on all logging for the FooController
    //
    off 'grails.app' // apply to all artefacts
    // debug 'grails.app.<artefactType>.ClassName // where artefactType is in:
    //                   bootstrap  - For bootstrap classes
    //                   dataSource - For data sources
    //                   tagLib     - For tag libraries
    //                   service    // Not effective with mixins -- see comment above
    //                   controller // Not effective with mixins -- see comment above
    //                   domain     - For domain entities
}


// ******************************************************************************
//
//                       +++ BOOKSTORE CONFIGURATION +++
//
// The Higher Education Opportunity Act (HEOA) requires that at least one bookstore link be configured.
// This section must be configured to display a hyperlink to an online book site for reviewing required course materials.
//  url: [REQUIRED] enter a valid URL to the bookstore
//  label: [REQUIRED] message.properties code for displaying as hyperlink label
//  campus: [OPTIONAL] provide specific links based on the campus code
//  page: [REQUIRED if params used] Overall Page and Field Configuration Page number if the URL is specific to search results ("30" - Section)
//  params: [OPTIONAL] There are three options for identifying parameters to be substituted in the URL.
//       1.  Overall Page and Field Configuration Field (SOAWSCR) value for parameter substitution or one of the following options.
//           (INSTRUCTOR and MEETINGTIME are not valid options)
//       2.  Student name may be passed to the bookstore link by supplying "NAME" in the parameter list.  The name will be formatted
//           as identified in the General Person plugin messages.properties for default.name.format which is used throughout
//           Banner XE administrative and SSB apps.
//       3. If the element you need is not in SOAWSCR, you may identify it directly from the section object in the code.
//           Simply identify the SectionDecorator fields with matching case and a preceding '.'.
//           Likely examples:
//              ".termDesc" - section.termDesc (201410)
//              ".partOfTerm" - section.partOfTerm (1)
//              ".subject" - section.subject (ART)
//              ".campus" - section.campus (M)
//              ".campusDescription" - section.campusDescription (Main Campus)
//              ".college" - section.college (BU)
//
// If using variables, use "{0}", "{1}", and so on, as place holders for the parameters appearing in the same order in the params array.
//
// ******************************************************************************

//NOTE:  These are examples of possible link configurations.
// 1. Borders will only be displayed if the section is associated with campus code = 1.
// 2. Barnes and Noble will be displayed with all sections.
// 3. Follet book site will require substitution of "<<Campus Store ID>>" with the actual campus ID, as well as parameters which will be substituted at run time.
bookstore = [
        [       url:"http://www.borders.com",
                label:"bookstore.links.borders",
                campus:"1"],
        [       url:"https://www.barnesandnoble.com",
                label:"bookstore.links.barnesAndNoble"],
       	[       url:"http://www.bkstr.com/webapp/wcs/stores/servlet/CourseMaterialsResultsView?storeId=<<Campus Store ID>>&termId={0}&departmentDisplayName={1}&courseDisplayName={2}&sectionDisplayName={3}",
                label: "bookstore.links.follet",
        		page: "30",
				params: ["TERM",".department","SUBJECTDESCRIPTION","COURSENUMBER"]
		]
]




// ******************************************************************************
//
//                       +++ Email and Print CONFIGURATION +++
//
//Allow printing and email on My Schedule and Options - and on Lookup a Schedule page.
//These sections must be configured to allow for either, or both features to be enabled.
//Mail host must be your SMTP server - "your.smtp.address" would be your universities email address, like mail.school.edu, or a valid IP address to the mail server
//Default from will be the email address, that when sent to students, will display in the "FROM" field of the email.
//This email address must also be a valid email address within your DNS/email server, preferably an email account that is not actively monitored.
//


grails {
   mail {
     host = "your.smtp.address"
   }
}
grails.mail.default.from="your_email_address@school.edu"


allowPrint = true
