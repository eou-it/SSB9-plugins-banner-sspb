{
   "constantName": "pbadm.VirtualDomainRoles",
   "developerSecurity": [],
   "extendsPage": null,
   "fileTimestamp": "2020-12-10T06:35:53Z",
   "modelView": {
      "components": [
         {
            "resource": "virtualDomains.pbadmVirtualDomainRoles",
            "name": "virtualDomainRoles",
            "type": "resource",
            "staticData": []
         },
         {
            "resource": "virtualDomains.pbadmVirtualDomainLookup",
            "name": "virtualDomainLookup",
            "type": "resource",
            "staticData": []
         },
         {
            "resource": "virtualDomains.pbadmWebAdminRoles",
            "name": "webTailorRolesLookup",
            "type": "resource",
            "staticData": []
         },
         {
            "components": [
               {
                  "valueStyle": "popupSelectBox pbPopupDataGrid:{'serviceNameType':'virtualdomains','id':'selectVirtualDomain','isPbPage':'true'}",
                  "label": "Virtual Domain",
                  "loadInitially": true,
                  "type": "select",
                  "required": false,
                  "sourceParameters": {},
                  "name": "selectVirtualDomain",
                  "onLoad": "$editVirtualDomainRoles.$load();$EditRolesForm.$visible=$selectVirtualDomain; $roleName.$populateSource();",
                  "model": "selectVirtualDomain",
                  "sourceModel": "virtualDomainLookup1",
                  "style": "col-sm-6 rTableCell",
                  "placeholder": "Select...",
                  "labelKey": "SERVICE_NAME",
                  "valueKey": "VID",
                  "onUpdate": "$editVirtualDomainRoles.$load();\n$EditRolesForm.$visible=$selectVirtualDomain;\n $roleName.$populateSource();\n$allowModify = window.localStorage['allowModify'];\nwindow.localStorage['allowModify'] = \"\";"
               },
               {
                  "valueStyle": "primary",
                  "onClick": "var baseUrl = location.origin; \nvar path = \"/BannerExtensibility/virtualDomainComposer/loadVirtualDomain\";\nvar url = baseUrl + path;\nif($selectVirtualDomain && $CONSTANT_NAME){\nupdateLocalStorage($CONSTANT_NAME, $selectVirtualDomain);\n}\nlocation.assign(url);",
                  "name": "virtualDomainComposerButton",
                  "style": "col-sm-6 divAlignToRight",
                  "label": "Virtual Domain Composer",
                  "type": "button"
               }
            ],
            "name": "SelectVirtualDomainBlock",
            "showInitially": true,
            "style": "col-sm-12 rTable",
            "label": "",
            "type": "block"
         },
         {
            "components": [
               {
                  "allowDelete": true,
                  "components": [
                     {
                        "documentation": "Should have some way to forbid selecting existing roles for this domain...",
                        "label": "Role",
                        "loadInitially": true,
                        "type": "select",
                        "required": true,
                        "sourceParameters": {},
                        "name": "roleName",
                        "model": "ROLE_NAME",
                        "sourceModel": "webTailorRolesLookup",
                        "placeholder": "Select unique role...",
                        "labelKey": "DESCRIPTION",
                        "valueKey": "CODE",
                        "onUpdate": "",
                        "value": ""
                     },
                     {
                        "readonly": false,
                        "booleanTrueValue": "1",
                        "booleanFalseValue": "0",
                        "name": "allowAll",
                        "model": "",
                        "label": "Allow All",
                        "loadInitially": true,
                        "type": "boolean",
                        "onUpdate": "currentSelection.ALLOW_GET=currentSelection.allowAll;\ncurrentSelection.ALLOW_POST=currentSelection.allowAll;\ncurrentSelection.ALLOW_PUT=currentSelection.allowAll;\ncurrentSelection.ALLOW_DELETE=currentSelection.allowAll;",
                        "value": "0"
                     },
                     {
                        "readonly": false,
                        "booleanTrueValue": "1",
                        "booleanFalseValue": "0",
                        "name": "allowGet",
                        "model": "ALLOW_GET",
                        "label": "Allow Get",
                        "loadInitially": true,
                        "type": "boolean",
                        "onUpdate": "",
                        "value": "1"
                     },
                     {
                        "readonly": false,
                        "booleanTrueValue": "1",
                        "booleanFalseValue": "0",
                        "name": "allowPost",
                        "model": "ALLOW_POST",
                        "label": "Allow Post",
                        "loadInitially": true,
                        "type": "boolean",
                        "value": "0"
                     },
                     {
                        "readonly": false,
                        "booleanTrueValue": "1",
                        "booleanFalseValue": "0",
                        "name": "allowPut",
                        "model": "ALLOW_PUT",
                        "label": "Allow Put",
                        "loadInitially": true,
                        "type": "boolean",
                        "value": "0"
                     },
                     {
                        "readonly": false,
                        "booleanTrueValue": "1",
                        "booleanFalseValue": "0",
                        "name": "allowDelete",
                        "model": "ALLOW_DELETE",
                        "label": "Allow Delete",
                        "loadInitially": true,
                        "type": "boolean",
                        "value": "0"
                     },
                     {
                        "name": "virtualDomainID",
                        "model": "VIRTUAL_DOMAIN_ID",
                        "loadInitially": true,
                        "type": "hidden",
                        "value": "$selectVirtualDomain"
                     }
                  ],
                  "onError": "var errorMessage =response.data.errors? response.data.errors.errorMessage: null;\nif (errorMessage && errorMessage.indexOf(\"ORA-20000\") > -1) {\n  alert(\"An entry already exists for this virtual domain and role, cannot add a duplicate\", {type:\"error\"});\n} else {\n   alert( errorMessage?errorMessage:response.data, {type:\"error\"});\n}",
                  "allowNew": true,
                  "onSaveSuccess": "var saveAction = \"saved\";\n\nif (action == 'D')\n  {\n    saveAction = \"deleted\";\n  }\nalert( \"Virtual Domain role \" + response.ROLE_NAME  + ' ' + saveAction,{type:\"success\", flash:true});",
                  "pageSize": 5,
                  "label": "Edit Roles for selected virtual domain",
                  "loadInitially": true,
                  "type": "grid",
                  "name": "editVirtualDomainRoles",
                  "allowModify": true,
                  "onLoad": "setTimeout(function(){ \nif($allowModify === 'true'){\n$('#pbid-EditRolesForm :input').attr('disabled', true);\n$editVirtualDomainRolesGrid.enableCellSelection=false;\n$editVirtualDomainRolesGrid.ngGrid.config.enableRowSelection=false;\n}\n }, 0);",
                  "model": "virtualDomainRoles",
                  "allowReload": true,
                  "parameters": {
                     "VIRTUAL_DOMAIN_ID": "$selectVirtualDomain"
                  }
               }
            ],
            "name": "EditRolesForm",
            "showInitially": false,
            "type": "block"
         }
      ],
      "documentation": "Associate Roles with a virtual domain",
      "name": "pbadmVirtualDomainRoles",
      "scriptingLanguage": "JavaScript",
      "label": "Virtual Domain Roles",
      "title": "Associate Roles with a virtual domain",
      "type": "page"
   },
   "owner": null,
   "pageRoles": [
      {
         "roleName": "ADMIN-GPBADMA",
         "allow": true
      },
      {
         "roleName": "ADMIN-GPBADMN",
         "allow": true
      }
   ]
}
