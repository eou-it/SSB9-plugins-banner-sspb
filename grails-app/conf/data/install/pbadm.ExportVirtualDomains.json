{
   "constantName": "pbadm.ExportVirtualDomains",
   "extendsPage": {"constantName": "pbadm.ExportBase"},
   "modelView": {
      "baseRoot": "pbadmExportBase",
      "deltaVersion": "1.0",
      "deltas": {
         "ShowForm": {"label": {
            "ext": "Filtered Virtual Domains",
            "base": "Filtered Objects"
         }},
         "exportGrid": {"label": {
            "ext": "Virtual domains to export",
            "base": "Objects to export"
         }},
         "exportResource": {"resource": {
            "ext": "virtualdomainexports",
            "base": "objectexports"
         }},
         "getExport": {"onLoad": {
            "ext": "function download(p){\n    if(!p) return;\n     var blob = new Blob([decodeURIComponent(p.data)],{type: \"text/csv;charset=utf-8;\"});\n\nif (window.navigator.msSaveBlob) { // IE 10+\nwindow.navigator.msSaveBlob(blob, p.fileName)\n    } else {\n        var theAnchor = $('<a />')\n        .attr('href', p.header+p.data)\n        .attr('download', p.fileName)\n        .appendTo('body');\n    \n    theAnchor[0].click(); \n    theAnchor.remove();\n    }\n}\n\n//Define keys to remove using + to avoid replacement with PB variables\nvar keys={};\nkeys[ \"$\"+\"resolved\"]= true;\nkeys[\"$\"+\"$\"+\"hashKey\"]= true;\nkeys[\"$\"+\"promise\"]=true;\n\n// remove additional properties added by Angular resource when pretty print source\nfunction jsonFilter(key, value) {\n    return keys[key]?undefined:value;\n}\n\n\nif (data && data.serviceName){\n    var params = {\n          fileName: 'virtualDomains.'+data.serviceName+'.json',\n          header: 'data:text/csv;charset=utf8,',\n          data: encodeURIComponent(JSON.stringify(data,jsonFilter,3))\n    };\n    download(params);\n    alert(\"Exported virtual domain: \"+ data.serviceName,{flash: true});\n} else {\n    alert('Unable to save data - unexpected format.', {type:\"error\"});   \n}",
            "patch": "--- original\n+++ revised\n@@ -26,5 +26,5 @@\n if (data && data.serviceName){\n     var params = {\n-          fileName: 'objects.'+data.serviceName+'.json',\n+          fileName: 'virtualDomains.'+data.serviceName+'.json',\n           header: 'data:text/csv;charset=utf8,',\n           data: encodeURIComponent(JSON.stringify(data,jsonFilter,3))",
            "base": "function download(p){\n    if(!p) return;\n    var theAnchor = $('<a />')\n        .attr('href', p.header+p.data)\n        .attr('download', p.fileName)\n        // Firefox does not fires click if the link is outside\n        // the DOM\n        .appendTo('body');\n    \n    theAnchor[0].click(); \n    theAnchor.remove();\n}\n\n//Define keys to remove using + to avoid replacement with PB variables\nvar keys={};\nkeys[ \"$\"+\"resolved\"]= true;\nkeys[\"$\"+\"$\"+\"hashKey\"]= true;\nkeys[\"$\"+\"promise\"]=true;\n\n// remove additional properties added by Angular resource when pretty print source\nfunction jsonFilter(key, value) {\n    return keys[key]?undefined:value;\n}\n\n\nif (data && data.serviceName){\n    var params = {\n          fileName: 'objects.'+data.serviceName+'.json',\n          header: 'data:text/csv;charset=utf8,',\n          data: encodeURIComponent(JSON.stringify(data,jsonFilter,3))\n    };\n    download(params);\n    alert(\"Exported virtual domain: \"+ data.serviceName,{flash: true});\n} else {\n    alert('Unable to save data - unexpected format.', {type:\"error\"});   \n}"
         }},
         "pbadmExportBase": {
            "_name": {
               "ext": "pbadmExportVirtualDomains",
               "base": "pbadmExportBase"
            },
            "documentation": {
               "ext": "Export Virtual Domains",
               "base": "This page is the base for a number of export pages and contains common definitions"
            },
            "label": {
               "ext": "Export Virtual Domains",
               "base": "Export artifacts basepage"
            },
            "title": {
               "ext": "Export Virtual Domains",
               "base": "Export artifacts basepage"
            }
         }
      }
   },
   "fileTimestamp": "2016-11-01T17:50:34Z",
   "pageRoles": [{
      "allow": true,
      "roleName": "ADMIN-GPBADMN"
   }]
}