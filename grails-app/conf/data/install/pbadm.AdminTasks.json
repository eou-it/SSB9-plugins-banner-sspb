{
   "constantName": "pbadm.AdminTasks",
   "developerSecurity": [],
   "extendsPage": null,
   "fileTimestamp": "2020-07-15T09:11:13Z",
   "modelView": {
      "components": [
         {
            "resource": "pageexports",
            "name": "pageResource",
            "type": "resource",
            "staticData": []
         },
         {
            "resource": "virtualdomainexports",
            "name": "vdResource",
            "type": "resource",
            "staticData": []
         },
         {
            "resource": "cssexports",
            "name": "cssResource",
            "type": "resource",
            "staticData": []
         },
         {
            "resource": "admintasks",
            "name": "adminTaskResource",
            "type": "resource",
            "staticData": []
         },
         {
            "name": "uploadFiles",
            "type": "resource",
            "staticData": []
         },
         {
            "components": [
               {
                  "components": [
                     {
                        "name": "txtDispOwner",
                        "type": "literal",
                        "value": "Check copy owner box to copy the owner from exported artifact. To set the user to current user, uncheck box"
                     },
                     {
                        "readonly": false,
                        "name": "copyOwner",
                        "model": "copyOwner",
                        "label": "Copy Owner on Import",
                        "loadInitially": true,
                        "type": "boolean"
                     },
                     {
                        "name": "textDispDevSec",
                        "type": "literal",
                        "value": "Check copy Developer permission box to copy the developer permission from the exported artifact. To copy no permission, uncheck box."
                     },
                     {
                        "readonly": false,
                        "name": "copyDevSec",
                        "model": "copyDevSec",
                        "label": "Copy all Developers permissions on import",
                        "loadInitially": true,
                        "type": "boolean"
                     }
                  ],
                  "name": "securityBlock",
                  "showInitially": true,
                  "label": "Select Artifact permissions",
                  "type": "block"
               },
               {
                  "name": "helpText",
                  "type": "literal",
                  "value": "Select files from local directories for import"
               },
               {
                  "name": "uploadFileSelect",
                  "type": "literal",
                  "value": "<input type=\"file\" id=\"filesElem\" name=\"files[]\" multiple accept=\".json\" aria-label=\"Select files from local directories for import\"/><br/>\n\n<script>\n\n  function handleFileSelect(evt) {\n  \tvar files = evt.target.files;\n        var scope = getControllerScopeById(controllerId);\n        var count = files.length;\n        //scope.artifactsGrid.enablePaging = false;\n\n        scope.artifactsDS.data.removeAll();\n        scope.\\$apply();\n  \t\n\tfunction addFile(event, file) {\n            var jsonData = JSON.parse(event.target.result)\n            if(!scope.copyOwner) {\n                    jsonData.owner = user.oracleUserName\n                    file.owner = user.oracleUserName\n                 } else {\n                     file.owner = jsonData.owner\n                 }\n                if(!scope.copyDevSec) {\n                    jsonData.developerSecurity = [];\n                 }\n  \t\tfile.domain =JSON.stringify(jsonData)  \n           \tscope.artifactsDS.data.push(file);\n \t\tscope.\\$apply(); //Update the UI\t\n\t}\n\tfor (var i = 0, f; f = files[i]; i++) {\n                f.index = i;\n                f.count = count;\n  \t\tvar reader = new FileReader();\n\t\treader.onloadend = (function(file) {\n\t\t  return function(evt) {\n\t\t\taddFile(evt, file);\n\t\t  };\n\t\t})(f);\t\t\n  \t\treader.readAsText(f);\n  \t}\n  }\n  document.getElementById('filesElem').addEventListener('change', handleFileSelect, false);\n\n</script>"
               },
               {
                  "allowDelete": false,
                  "components": [
                     {
                        "asHtml": false,
                        "name": "fileName",
                        "model": "name",
                        "label": "File Name",
                        "loadInitially": true,
                        "type": "display"
                     },
                     {
                        "asHtml": false,
                        "name": "owner",
                        "model": "owner",
                        "style": "",
                        "label": "Owner",
                        "loadInitially": true,
                        "type": "display",
                        "value": ""
                     },
                     {
                        "readonly": true,
                        "name": "lastModified",
                        "model": "",
                        "label": "Modified",
                        "loadInitially": true,
                        "type": "datetime",
                        "parameters": {},
                        "validation": {},
                        "required": false
                     },
                     {
                        "readonly": false,
                        "name": "size",
                        "fractionDigits": 0,
                        "label": "Size",
                        "loadInitially": true,
                        "type": "number",
                        "parameters": {},
                        "validation": {},
                        "required": false
                     },
                     {
                        "name": "domain",
                        "model": "domain",
                        "loadInitially": true,
                        "type": "hidden"
                     }
                  ],
                  "allowNew": false,
                  "documentation": "",
                  "name": "artifacts",
                  "pageSize": 5,
                  "allowModify": false,
                  "model": "uploadFiles",
                  "allowReload": false,
                  "loadInitially": false,
                  "type": "grid",
                  "parameters": {}
               },
               {
                  "valueStyle": "primary",
                  "onClick": "$artifacts.$data.forEach(function (a) {\n\tvar task = {\n\t\ttask: 'import',\n                copyOwner: $copyOwner,\n                copyDevSec: $copyDevSec,\n\t\tartifact: {\n\t\t\tfileName: a.name,\n\t\t\tdomain: a.domain,\n\t\t\tindex: a.index,\n\t\t\tcount: a.count,\n\t\t\tsize: a.size\n\t\t}\n\t};\n\t$adminTaskResource.$post(\n\t\ttask,\n\t\tnull, /*no params*/\n\t\tfunction (response) {\n\t\t\tif (response.imported == 1) {\n\t\t\t\talert('Imported ' + response.name + ' type: ' + response.type, {\n\t\t\t\t\tflash : true\n\t\t\t\t});\n\t\t\t}\n                       if (response.accessError) {\n\t\t\t\t alert(response.accessError, {type:\"error\"});\n\t\t\t}\n\t\t},\n\t\tfunction (response) {\n\t\t\tvar msg = \"Failed uploading artifacts.\\n\";  \n\t\t\tif (response.data.errors.errorMessage) {\n\t\t\t  msg += response.data.errors.errorMessage;\n\t\t\t} else if (response.data.errors[0].errorMessage) {\n\t\t\t  msg += response.data.errors[0].errorMessage;\n\t\t\t} else {\n\t\t\t  msg += response.statusText;\n\t\t\t}\n\t\t\tif (msg) {\n\t\t\t  alert(msg,{type:\"error\"});\n\t\t\t}\n\t\t}\n\t);\n});",
                  "name": "startUpload",
                  "label": "Import",
                  "type": "button"
               }
            ],
            "name": "UploadSources",
            "showInitially": true,
            "label": "Import Page Builder Artifacts from local directory",
            "type": "block"
         },
         {
            "components": [
               {
                  "readonly": false,
                  "booleanTrueValue": "",
                  "booleanFalseValue": "",
                  "name": "pages",
                  "label": "Pages",
                  "loadInitially": true,
                  "type": "boolean",
                  "value": "true"
               },
               {
                  "readonly": false,
                  "name": "virtualDomains",
                  "label": "Virtual Domains",
                  "loadInitially": true,
                  "type": "boolean",
                  "value": "true"
               },
               {
                  "readonly": false,
                  "name": "css",
                  "label": "CSS",
                  "loadInitially": true,
                  "type": "boolean",
                  "value": "true"
               },
               {
                  "valueStyle": "primary",
                  "onClick": "if ($pages || $virtualDomains || $css) {\n\t$adminTaskResource.$post({\n\t\t\ttask : 'import',\n\t\t\tpages : $pages,\n                        copyOwner: $copyOwner,\n                        copyDevSec: $copyDevSec,\n\t\t\tvirtualDomains : $virtualDomains,\n\t\t\tcss : $css,\n\t\t},\n\t\tnull, /*no params*/\n\t\tfunction (response) {\n\t\t\talert('Imported pages: '+ nvl(response.importedPagesCount,0)+ \n\t\t\t      '<br>Imported virtualDomains: '+ nvl(response.importedVirtualDomainsCount,0)+\n\t\t\t      '<br>Imported css: '+ nvl(response.importedCssCount,0),\n                              {flash : true});\n\t        },\n\t\tfunction (response) {\n\t\t\tvar msg = \"Failed importing artifacts.\\n\";  \n\t\t\tif (response.data.errors.errorMessage) {\n\t\t\t  msg += response.data.errors.errorMessage;\n\t\t\t} else if (response.data.errors[0].errorMessage) {\n\t\t\t  msg += response.data.errors[0].errorMessage;\n\t\t\t} else {\n\t\t\t  msg += response.statusText;\n\t\t\t}\n\t\t\tif (msg) {\n\t\t\t  alert(msg,{type:\"error\"});\n\t\t\t}\n\t\t}\n\t);\n} else {\n\talert('No artifact type is selected for import', {flash : true,type : 'info'});\n}",
                  "name": "startImport",
                  "label": "Import",
                  "type": "button"
               }
            ],
            "name": "ImportSources",
            "showInitially": true,
            "label": "Import Page Builder Artifacts from server file system",
            "type": "block"
         },
         {
            "components": [
               {
                  "readonly": false,
                  "name": "viewArtifacts",
                  "label": "View Existing Page Builder Artifacts (% wildcard can be used in the filter)",
                  "loadInitially": true,
                  "type": "boolean",
                  "onUpdate": "$ShowPages.$visible=$viewArtifacts;\n$ShowVirtualDomains.$visible=$viewArtifacts;\n$ShowCss.$visible=$viewArtifacts;"
               },
               {
                  "components": [
                     {
                        "readonly": false,
                        "name": "pageFilter",
                        "model": "",
                        "placeholder": "Filter pages by name",
                        "label": "",
                        "loadInitially": false,
                        "type": "text",
                        "value": "",
                        "parameters": {},
                        "onUpdate": "$pageGrid.$load();",
                        "validation": {},
                        "required": false
                     },
                     {
                        "allowDelete": false,
                        "components": [
                           {
                              "asHtml": false,
                              "name": "pageID",
                              "model": "constantName",
                              "label": "Name",
                              "loadInitially": true,
                              "type": "display",
                              "value": ""
                           },
                           {
                              "readonly": true,
                              "name": "lastUpdated",
                              "model": "lastUpdated",
                              "label": "Last update",
                              "loadInitially": true,
                              "type": "datetime",
                              "parameters": {},
                              "validation": {},
                              "required": false
                           },
                           {
                              "readonly": true,
                              "name": "fileTimestamp",
                              "model": "fileTimestamp",
                              "label": "Timestamp File",
                              "loadInitially": true,
                              "type": "datetime",
                              "parameters": {},
                              "validation": {},
                              "required": false
                           }
                        ],
                        "submit": "",
                        "allowNew": false,
                        "pageSize": 5,
                        "saveDataLabel": "",
                        "onSaveSuccess": "",
                        "label": "Pages",
                        "loadInitially": false,
                        "type": "htable",
                        "name": "pageGrid",
                        "allowModify": false,
                        "model": "pageResource",
                        "style": "table table-striped table-bordered",
                        "allowReload": true,
                        "parameters": {
                           "constantName": "\"%\"+nvl( $pageFilter,\"\")+\"%\""
                        }
                     }
                  ],
                  "nextButtonLabel": "",
                  "name": "ShowPages",
                  "showInitially": false,
                  "label": "View pages",
                  "type": "form"
               },
               {
                  "components": [
                     {
                        "readonly": false,
                        "name": "vdFilter",
                        "placeholder": "Filter virtual domains by name",
                        "loadInitially": true,
                        "type": "text",
                        "parameters": {},
                        "onUpdate": "$virtualDomainGrid.$load();",
                        "validation": {},
                        "required": false
                     },
                     {
                        "allowDelete": false,
                        "components": [
                           {
                              "asHtml": false,
                              "name": "vdID",
                              "model": "serviceName",
                              "label": "Name",
                              "loadInitially": true,
                              "type": "display",
                              "value": ""
                           },
                           {
                              "readonly": true,
                              "name": "vdLastUpdated",
                              "model": "lastUpdated",
                              "label": "Last update",
                              "loadInitially": true,
                              "type": "datetime",
                              "parameters": {},
                              "validation": {},
                              "required": false
                           },
                           {
                              "readonly": true,
                              "name": "vdFileTimestamp",
                              "model": "fileTimestamp",
                              "label": "Timestamp File",
                              "loadInitially": true,
                              "type": "datetime",
                              "parameters": {},
                              "validation": {},
                              "required": false
                           }
                        ],
                        "submit": "",
                        "allowNew": false,
                        "pageSize": 5,
                        "saveDataLabel": "",
                        "onSaveSuccess": "",
                        "label": "Virtual domains",
                        "loadInitially": false,
                        "type": "htable",
                        "name": "virtualDomainGrid",
                        "allowModify": false,
                        "model": "vdResource",
                        "style": "table table-striped table-bordered",
                        "allowReload": true,
                        "parameters": {
                           "serviceName": "\"%\"+nvl( $vdFilter,\"\")+\"%\""
                        }
                     }
                  ],
                  "nextButtonLabel": "Next",
                  "name": "ShowVirtualDomains",
                  "showInitially": false,
                  "label": "View virtual domains",
                  "type": "form"
               },
               {
                  "components": [
                     {
                        "readonly": false,
                        "name": "cssFilter",
                        "placeholder": "Filter CSS by name",
                        "loadInitially": true,
                        "type": "text",
                        "parameters": {},
                        "onUpdate": "$cssGrid.$load();",
                        "validation": {},
                        "required": false
                     },
                     {
                        "allowDelete": false,
                        "components": [
                           {
                              "asHtml": false,
                              "name": "cssID",
                              "model": "constantName",
                              "label": "Name",
                              "loadInitially": true,
                              "type": "display",
                              "value": ""
                           },
                           {
                              "readonly": true,
                              "name": "cssLastUpdated",
                              "model": "lastUpdated",
                              "label": "Last update",
                              "loadInitially": true,
                              "type": "datetime",
                              "parameters": {},
                              "validation": {},
                              "required": false
                           },
                           {
                              "readonly": true,
                              "name": "cssFileTimestamp",
                              "model": "fileTimestamp",
                              "label": "Timestamp File",
                              "loadInitially": true,
                              "type": "datetime",
                              "parameters": {},
                              "validation": {},
                              "required": false
                           }
                        ],
                        "submit": "",
                        "allowNew": false,
                        "pageSize": 5,
                        "saveDataLabel": "",
                        "onSaveSuccess": "",
                        "label": "CSS",
                        "loadInitially": false,
                        "type": "htable",
                        "name": "cssGrid",
                        "allowModify": false,
                        "model": "cssResource",
                        "style": "table table-striped table-bordered",
                        "allowReload": true,
                        "parameters": {
                           "constantName": "\"%\"+nvl( $cssFilter,\"\")+\"%\""
                        }
                     }
                  ],
                  "nextButtonLabel": "Next",
                  "name": "ShowCss",
                  "showInitially": false,
                  "label": "View CSS",
                  "type": "form"
               }
            ],
            "name": "viewArtifactsSection",
            "showInitially": true,
            "type": "block"
         },
         {
            "name": "jsCode",
            "type": "literal",
            "value": "<script>\nif(isImportPrevented && !user.isSuperUser) {\n$(\"input\", \"#pbid-securityBlock\").attr(\"disabled\", \"disabled\")\n$(\"input\", \"#pbid-uploadFileSelect-container\").attr(\"disabled\", \"disabled\")\n$(\"button\").attr(\"disabled\", \"disabled\")\n}\n</script>"
         }
      ],
      "documentation": "Miscellaneous tasks",
      "scriptingLanguage": "JavaScript",
      "name": "pbadmAdminTasks",
      "label": "",
      "title": "Admin tasks",
      "type": "page",
      "importCSS": "xeStyle,pbadm.adminTasksCss"
   },
   "owner": null,
   "pageRoles": [
      {
         "roleName": "ADMIN-GPBADMA",
         "allow": true
      },
      {
         "roleName": "ADMIN-GPBADMN",
         "allow": true
      }
   ]
}